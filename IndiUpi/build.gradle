apply plugin: 'com.android.library'
apply plugin: 'com.google.gms.google-services'
/*apply plugin: 'com.github.dcendents.android-maven'
apply plugin: "com.jfrog.bintray"*/

version = "1.1"

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 2
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'com.google.firebase:firebase-auth:22.3.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}


ext {
    bintrayRepo = 'IndiUpi'
    bintrayName = 'IndiUpi'

    publishedGroupId = 'com.gpfreetech'
    libraryName = 'IndiUpi'
    artifact = 'IndiUpi'

    libraryDescription = 'This is Android library to easily implement UPI Payment Integration in Android app. Requirement for this library: UPI Deep-linking supported application are required to be already installed in user mobile before using this library.'

    siteUrl = 'https://github.com/GovindaPaliwal/IndiUpi-Android'
    gitUrl = 'https://github.com/GovindaPaliwal/IndiUpi-Android.git'
    githubRepository= 'GovindaPaliwal/IndiUpi-Android'

    libraryVersion = version

    developerId = 'gpfreetech'
    developerName = 'Govinda P'
    developerEmail = 'govindapaliwal13@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

/*install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}*/

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

/*
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}*/
